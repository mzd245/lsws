#!/bin/sh

LSWS_DEFAULT_OPTIONS="$HOME/.lsws/config/lsws.defaults"
WALLPAPER_NAME_ADDR="$HOME/.lsws/logs/current_wallpaper"
WALLPAPER_LOGS="$HOME/.lsws/logs/wallpaper_logs"
WALLPAPERS_RESTORE_LOGS="$HOME/.lsws/logs/wallpaper_res_logs"

Restore(){
	local OUTPUT=`cat "${WALLPAPERS_RESTORE_LOGS}" | tail -n 2 | head -n 1`
	`$APP ${APP_FLAG} "${OUTPUT}" >> /dev/null ` && printf "${OUTPUT}\n" > "${WALLPAPER_NAME_ADDR}"
}

SecondRestore(){
	local ONE="$1";local TWO="$2"
	if [ "${ONE}" == "-p" ];then
		local OUTPUT=`awk -v n=$TWO '{saved[NR % n] = $0} END{if (NR >= n) print saved[(NR + 1) % n]}' < "$WALLPAPERS_RESTORE_LOGS"`
		`$APP $APP_FLAG "${OUTPUT}" > /dev/null ` && printf "${OUTPUT}\n" > "${WALLPAPER_NAME_ADDR}"
		printf "\033[0;32m$OUTPUT\033[0m is the wallpaper.\n"
	elif [ "${ONE}" == "-n" ];then
		local OUTPUT=`cat "${WALLPAPERS_RESTORE_LOGS}" | awk "NR==$TWO {print }"`
		`$APP $APP_FLAG "${OUTPUT}" > /dev/null ` && printf "${OUTPUT}\n" > "${WALLPAPER_NAME_ADDR}"
		printf "\033[0;32m$OUTPUT\033[0m is the wallpaper.\n"
	else
		exit 1
	fi
}

set_wallpaper(){
	printf "DIRECTORY var: $DIRECTORY\n"
	if [ "${DIRECTORY:-null}" == null ];then
		#${DIRECTORY:-null} means if DIRECTORY was undefined, set it to null.
		printf "\033[0;31mexited\033[0m\033[0;4m(DIRECTORY variable)\033[0m\n" && exit 1
	elif [ "${IGNORE:-null}" == null ] && [ "${APP:-null}" != null ];then
		printf "\033[0;32mpassed\033[0m\033[0;4m(IGNORE variable)\033[0m\n"
	elif [ "${APP:-null}" == null ];then
		printf "\033[0;31mexited\033[0m\033[0;4m(APP variable)\033[0m\n" && exit 1
	fi
	local WALLPAPERS_COUNT=`ls $DIRECTORY | wc -l`
	local RAND=`echo | awk 'srand() {printf("%d%d\n", (300 * rand()) * 2, (300 * rand()) * 2 )}'`
	local RAND_NUMBER=$( expr $RAND % $WALLPAPERS_COUNT)
	local COUNTER=0
	IFS=$'\n'
	for i in `ls ${DIRECTORY}`;do
		if [ "$COUNTER" == "$RAND_NUMBER" ];then
			local OUTPUT=`echo "$IGNORE" | grep -i "$i"`
			if [ -n "$OUTPUT" ];then
			printf "\n`date +%y/%m/%d-%H:%M:%S` <<this wallpaper passed: \033[0;36m${i}\033[0m \033[0;4m(because you were set it to IGNORE variable)>>\033[0m\n" >> "$WALLPAPER_LOGS"
			printf "\033[0;32m\nwallpaper skipped: %s\n\033[0m" "$i"
			continue
			fi
			printf "the \$IGNORE variable contents: ($IGNORE)\n"
			printf "\nwallpaper: %s\n" "$i"
			`$APP ${APP_FLAG} ${DIRECTORY}${i} >> "${WALLPAPER_LOGS}"`;printf "${DIRECTORY}${i}" > "${WALLPAPER_NAME_ADDR}"
			printf "${DIRECTORY}${i}\n" >> "${WALLPAPERS_RESTORE_LOGS}"
		fi
		let COUNTER+=1 > /dev/null
	done
}

TEMP=`getopt 'rwhp:n:lct:C' "$*"`
if [ $? -ne 0 ];then
	printf "\033[0;31mTerminating...\n\033[0m"
	exit 1
fi
if [ -e "$LSWS_DEFAULT_OPTIONS" ];then
	. "$LSWS_DEFAULT_OPTIONS"
fi
eval set -- "$TEMP"
unset TEMP
while [ true ];do
	case "$1" in
		'-r')
			Restore
			break
			;;
		'-w')
			set_wallpaper
			break
			;;
		'-p')
			NUMBER="$2"
			ARG="$1"
			SecondRestore ${ARG} ${NUMBER}
			break
			;;
		'-n')
			NUMBER="$2"
			ARG="$1"
			SecondRestore ${ARG} ${NUMBER}
			break
			;;
		'-l')
			OUTPUT=`cat ${WALLPAPERS_RESTORE_LOGS}`
			printf "last set wallpapers: \n\033[5;31m${OUTPUT}\n\033[0m"
			break
			;;
		'-c')
			cat /dev/null > "${WALLPAPERS_RESTORE_LOGS}"
			echo "done."
			break
			;;
		'-t')
			TIME=`expr $2 \* 60`
			while [ true ];do
				set_wallpaper
				sleep $TIME
			done

			break
			;;
		'-C')
			OUTPUT=`cat $WALLPAPER_NAME_ADDR`
			printf "\033[0;33m${OUTPUT}\033[0m\n"
			break
			;;
		'-h')
                        printf "Usage: lsws OPTION\nRead lsws(1) for more information.\n"
			break
			;;
		'--')
			shift
			break
			;;
		*)
			printf "Internal error.\n"
			exit 1
			;;
	esac
done
if [ -z "$1" ];then
	printf "lsws: missing operand\nTry 'lsws -h' for more information.\n"
fi
